{
  ".source.js, .source.ts": {
    "Function (JS Refactorings)": {
      "prefix": "rfn",
      "body": "'use strict';"
    },
    "Strict Directive (JS Refactorings)": {
      "prefix": "rstrict",
      "body": "'use strict';"
    },
    "Member Function (JS Refactorings)": {
      "prefix": "mfn",
      "body": "$1: function ($2) {\n $3 \n}"
    },
    "Anonymous Function (JS Refactorings)": {
      "prefix": "ranon",
      "body": "function ($1) {\n $2 \n}"
    },
    "Immediately Invoked Function Expression (JS Refactorings)": {
      "prefix": "iife",
      "body": "(function () {\n $1 \n})();"
    },
    "Export Object Literal (JS Refactorings)": {
      "prefix": "exportObj",
      "body": "module.exports = {\n $1 \n};"
    },
    "Export Module Value (JS Refactorings)": {
      "prefix": "export",
      "body": "module.exports = $1;"
    },
    "Require Statement (JS Refactorings)": {
      "prefix": "require",
      "body": "var ${1:varName} = require('${2:moduleName}');"
    },
    "Prototypal Object (JS Refactorings)": {
      "prefix": "protoObj",
      "body": "function ${1:objName} ($2) {\n $3 \n} \n\n${1:objName}.prototype = {\n $4 \n};"
    },
    "Condition Block (JS Refactorings)": {
        "prefix": "cond",
        "body": "if ($1) { \n$2 \n}"
    },
    "Console Log (JS Refactorings)": {
        "prefix": "log",
        "body": "console.log($1);"
    },
    "Lambda Function (JS Refactorings)": {
        "prefix": "lambda",
        "body": "$1 => $2"
    },
    "Arrow Function (JS Refactorings)": {
        "prefix": "arrow",
        "body": "($1) => {\n$2 \n}"
    },
    "Generator (JS Refactorings)": {
        "prefix": "generator",
        "body": "function *($1) { \n $2 \n}"
    },
    "Coroutine (JS Refactorings)": {
        "prefix": "coroutine",
        "body": "function *($1) { \n $2 \n}"
    },
    "Async Function (JS Refactorings)": {
        "prefix": "async",
        "body": "async function ($1) { \n$2 \n}"
    },
    "Try/Catch (JS Refactorings)": {
        "prefix": "tryCatch",
        "body": "try { \n$1 \n} catch (e) { \n$2 \n}"
    }
  }
}
