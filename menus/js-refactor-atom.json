{
  "context-menu": {
    "atom-text-editor": [
      {
        "label": "JS Refactorings",
        "submenu": [
          {
            "label": "Add Export",
            "command": "js-refactor-atom:addExport"
          },
          {
            "label": "Convert to Member Function",
            "command": "js-refactor-atom:convertToMemberFunction"
          },
          {
            "label": "Convert to Named Function",
            "command": "js-refactor-atom:convertToNamedFunction"
          },
          {
            "label": "Extract Variable",
            "command": "js-refactor-atom:extractVariable"
          },
          {
            "label": "Inline Variable",
            "command": "js-refactor-atom:inlineVariable"
          },
          {
            "label": "Negate Expression",
            "command": "js-refactor-atom:negateExpression"
          },
          {
            "label": "Reformat (ctrl + shift + t)",
            "command": "js-refactor-atom:reformat"
          },
          {
            "label": "Rename (alt + shift + F2)",
            "command": "js-refactor-atom:rename"
          },
          {
            "label": "Shift Parameters",
            "submenu": [
              {
                "label": "Shift Left",
                "command": "js-refactor-atom:shiftParamsLeft"
              },
              {
                "label": "Shift Right",
                "command": "js-refactor-atom:shiftParamsRight"
              }
            ]
          },
          {
            "label": "Wrap Selection",
            "submenu": [
              {
                "label": "in Arrow Function",
                "command": "js-refactor-atom:wrapInArrowFunction"
              },
              {
                "label": "in Async Function",
                "command": "js-refactor-atom:wrapInAsyncFunction"
              },
              {
                "label": "in Condition Block",
                "command": "js-refactor-atom:wrapInCondition"
              },
              {
                "label": "in Executed Function",
                "command": "js-refactor-atom:wrapInExecutedFunction"
              },
              {
                "label": "in Function",
                "command": "js-refactor-atom:wrapInFunction"
              },
              {
                "label": "in Generator Function/Coroutine",
                "command": "js-refactor-atom:wrapInGenerator"
              },
              {
                "label": "in Immediately Invoked Function Expression",
                "command": "js-refactor-atom:wrapInIIFE"
              },
              {
                "label": "in Try-Catch Block",
                "command": "js-refactor-atom:wrapInTryCatch"
              }
            ]
          }
        ]
      }
    ]
  },
  "menu": [
    {
      "label": "Packages",
      "submenu": [
        {
          "label": "JS Refactorings",
          "submenu": [
            {
              "label": "Add Export",
              "command": "js-refactor-atom:addExport"
            },
            {
              "label": "Convert to Member Function",
              "command": "js-refactor-atom:convertToMemberFunction"
            },
            {
              "label": "Convert to Named Function",
              "command": "js-refactor-atom:convertToNamedFunction"
            },
            {
              "label": "Extract Variable",
              "command": "js-refactor-atom:extractVariable"
            },
            {
              "label": "Inline Variable",
              "command": "js-refactor-atom:inlineVariable"
            },
            {
              "label": "Negate Expression",
              "command": "js-refactor-atom:negateExpression"
            },
            {
              "label": "Reformat (ctrl + shift + t)",
              "command": "js-refactor-atom:reformat"
            },
            {
              "label": "Rename  (alt + shift + F2)",
              "command": "js-refactor-atom:rename"
            },
            {
              "label": "Shift Parameters",
              "submenu": [
                {
                  "label": "Shift Left",
                  "command": "js-refactor-atom:shiftParamsLeft"
                },
                {
                  "label": "Shift Right",
                  "command": "js-refactor-atom:shiftParamsRight"
                }
              ]
            },
            {
              "label": "Wrap Selection",
              "submenu": [
                {
                  "label": "in Arrow Function",
                  "command": "js-refactor-atom:wrapInArrowFunction"
                },
                {
                  "label": "in Async Function",
                  "command": "js-refactor-atom:wrapInAsyncFunction"
                },
                {
                  "label": "in Condition Block",
                  "command": "js-refactor-atom:wrapInCondition"
                },
                {
                  "label": "in Executed Function",
                  "command": "js-refactor-atom:wrapInExecutedFunction"
                },
                {
                  "label": "in Function",
                  "command": "js-refactor-atom:wrapInFunction"
                },
                {
                  "label": "in Generator Function/Coroutine",
                  "command": "js-refactor-atom:wrapInGenerator"
                },
                {
                  "label": "in Immediately Invoked Function Expression",
                  "command": "js-refactor-atom:wrapInIIFE"
                },
                {
                  "label": "in Try-Catch Block",
                  "command": "js-refactor-atom:wrapInTryCatch"
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
